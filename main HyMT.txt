import easygui

# Define constants
FARADAY_CONSTANT = 96485    # Coulombs per mole of electrons
MOLAR_VOLUME = 24.45        # Liters per mole at STP
IDEAL_GAS_CONSTANT = 0.08206  # L·atm/(mol·K)

# Get input values from user
corrosion_value = easygui.enterbox("Enter the corrosion rate in mm/year:")
corrosion_value = float(corrosion_value)

bubble_count = easygui.enterbox("Enter the number of bubbles observed during experiment:")
bubble_count = int(bubble_count)

electrode_type = easygui.enterbox("Enter the type of electrode (e.g. steel):")

applied_current = easygui.enterbox("Enter the applied current in Ampere:")
applied_current = float(applied_current)

electrode_area = easygui.enterbox("Enter the electrode surface area in m^2:")
electrode_area = float(electrode_area)

liquid_volume = easygui.enterbox("Enter the volume of liquid in which electrode is submerged in liters:")
liquid_volume = float(liquid_volume)

temperature = easygui.enterbox("Enter the temperature in Celsius:")
temperature = float(temperature)

solution_concentration = easygui.enterbox("Enter the solution concentration in moles per liter:")
solution_concentration = float(solution_concentration)

solution_medium = easygui.enterbox("Enter the solution medium (e.g. acidic, alkaline, or neutral):")

# Define reaction and calculate moles of electrons
if electrode_type == 'steel':
    # Reaction for steel: Fe + 2H2O -> Fe(OH)2 + H2
    moles_electrons = corrosion_value / (56.0 * 10**-6)  # Moles of iron per mm of corrosion
    moles_hydrogen = moles_electrons / 2.0
else:
    easygui.msgbox("Error: electrode type not recognized")
    exit()

# Calculate volume of hydrogen gas produced
volume_hydrogen = moles_hydrogen * MOLAR_VOLUME

# Calculate mass of hydrogen gas produced
mass_hydrogen = volume_hydrogen * 0.08988  # Density of hydrogen gas at STP in g/L

# Calculate the partial pressure of hydrogen gas produced
if solution_medium == 'acidic':
    henrys_constant = 0.032 # Henry's constant for H2 in acidic solution (mol/L/atm)
elif solution_medium == 'alkaline':
    henrys_constant = 0.11 # Henry's constant for H2 in alkaline solution (mol/L/atm)
else:
    henrys_constant = 0.000089 # Henry's constant for H2 in neutral solution (mol/L/atm)

partial_pressure = (mass_hydrogen * IDEAL_GAS_CONSTANT * (temperature + 273.15)) / (liquid_volume * 1000)  # Convert liters to mL
partial_pressure *= henrys_constant * solution_concentration

# Calculate the rate of hydrogen gas production
rate_hydrogen = (applied_current / (FARADAY_CONSTANT * electrode_area)) * moles_hydrogen

# Print results
results = "Moles of electrons: {:.2e}\n".format(moles_electrons)
results += "Moles of hydrogen gas produced: {:.2e}\n".format(moles_hydrogen)
results += "Volume of hydrogen gas produced: {:.2f} L\n".format(volume_hydrogen)
results += "Mass of hydrogen gas produced: {:.2f} g".format(mass_hydrogen)
results +="Partial pressure of hydrogen gas produced: {:.2f} atm".format(partial_pressure)
results +="Rate of hydrogen gas production: {:.2e} mol/s".format(rate_hydrogen)
results +="Number of bubbles per unit volume of hydrogen gas produced: {:.2f}".format(bubble_count / volume_hydrogen)
# Print results
print("Moles of electrons: {:.2e}".format(moles_electrons))
print("Moles of hydrogen gas produced: {:.2e}".format(moles_hydrogen))
print("Volume of hydrogen gas produced: {:.2f} L".format(volume_hydrogen))
print("Mass of hydrogen gas produced: {:.2f} g".format(mass_hydrogen))
print("Partial pressure of hydrogen gas produced: {:.2f} atm".format(partial_pressure))
print("Rate of hydrogen gas production: {:.2e} mol/s".format(rate_hydrogen))
print("Number of bubbles per unit volume of hydrogen gas produced: {:.2f}".format(bubble_count / volume_hydrogen))

